#!/usr/bin/env bash
###########################################################################
# the above shebang is irrelevant since this is supposed to be sourced    #
# it just forces bad executions of this to be in a supported shell that   #
# can error properly                                                      #
###########################################################################

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# #                                                                     # #
# # DEACTIVATE                                                          # #
# # if tree that determined which deactivate script to run              # #
# #                                                                     # #
# # assumes that activate*/deactivate*/whichshell*/envvar_cleanup*      # #
# # exists on the user's $PATH                                          # #
# #                                                                     # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

###########################################################################
# ERROR CLAUSE                                                            #
whichshell_args.bash "deactivate" "error-clause" \
`whichshell_ps.bash && eval 'echo $0' || echo 'csh'` | \
awk -f "`which whichshell.awk`" || :
# END ERROR CLAUSE                                                        #
###########################################################################

###########################################################################
# BOURNE SHELL CLAUSE                                                     #
# bash/zsh/dash/posh/ksh                                                  #
whichshell_args.bash "deactivate" "bourne-shell-clause" \
`whichshell_ps.bash && eval 'echo $0' || echo 'csh'` | \
awk -f "`which whichshell.awk`" && . deactivate.sh || :
# END BOURNE SHELL CLAUSE                                                 #
###########################################################################

###########################################################################
# C-SHELL CLAUSE                                                          #
# tcsh/csh                                                                #
whichshell_args.bash "deactivate" "c-shell-clause" \
`whichshell_ps.bash && eval 'echo $0' || echo 'csh'` | \
awk -f "`which whichshell.awk`" && source "`which deactivate.csh`" || :
# END C-SHELL CLAUSE                                                      #
###########################################################################

###########################################################################
# NO-OP RETURN                                                            #
# this will ensure that deactivate will consistently return               #
#                                                                         #
# since we rely heavily on the usage of return codes to detect what       #
# scripts to run above, zero vs non-zero return codes does not            #
# necessarily mean error                                                  #
:
# END NO-OP RETURN                                                        #
###########################################################################
