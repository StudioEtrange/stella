TODO

NOTE :
NIX RECIPE inspiration
* nixos (https://github.com/NixOS/nixpkgs)
* homebrew (https://github.com/Homebrew/homebrew-core)
* 0install (http://0install.net/)

mingw-w64 RECIPE :
* http://www.gaia-gis.it/spatialite-3.0.0-BETA/mingw64_how_to.html

msys2 + mingw-w64 RECIPES :
* https://github.com/Alexpux/MINGW-packages
* https://github.com/Alexpux/MSYS2-packages

# NOTE : homebrew flag setting system : https://github.com/Homebrew/homebrew/blob/master/Library/Homebrew/extend/ENV/super.rb


# NOTE update screenFetch
    rm -Rf nix/pool/artefact/screenFetch
    cd nix/pool/artefact
    git clone https://github.com/KittyKatt/screenFetch

[ ] Update README
  [ ] history : FIRST PUSH OF stella pre version : https://bitbucket.org/StudioEtrange/ryzomcore-script/src/1308706a1dc3f1dde7d65b048e9b16f2a2f2f518

[ ] COMMENTS code
[ ] Format output (log system)
[ ] Test and remove DEST_ERASE in each feature_recipe : cause problem when bundled in merge mode. But only for binary ? keep it for source? only when get binary

[ ] Test and fix path with space
[ ] win : function require
[ ] function get_resource : change option STRIP to option NO_STRIP. STRIP will be by default if possible
[ ] win : review link feature library and lib isolation
[ ] win : portable mode review copy dependencies
[ ] win add recipes for these libs :
https://ryzomcore.atlassian.net/wiki/display/RC/MinGW+External+Libraries
https://ryzomcore.atlassian.net/wiki/display/RC/Create+External+Libs

[ ] win : build mingw-w64 compiler from source https://github.com/niXman/mingw-builds

[ ] Default build arch equivalent to current cpu arch ? (and change option name buildarch with forcearch) (set STELLA_BUILD_ARCH_DEFAULT)
[ ] feature system : FEAT_DEFAULT_ARCH must be fill with current cpu arch
[ ] feature built from source must pick an arch and be installed in a folder with version@arch -- buildarch option should be remove -- by default built arch should be current cpu arch
[ ] win : replace patch from gnuwin32 (pb with UAC)
[ ] nix : FORCE_RENAME on link_feature_library (see windows implementation)
[X] win : check library dynamic dependencies - use dependencywalker in console mode ? use dumpbin http://stackoverflow.com/a/475323 ? use CMAKE GetPrerequisites. FINISH check_linked_lib.cmake use it with cmake -P check_linked_lib.cmake -DMY_BINARY_LOCATION=<path>
[ ] nix : when ckecking dependencies dynamic -- print all libs
[ ] add possibility of a last step before/after install, to do some test like make test or make check (i.e : for gmp lib)
[ ] win : sys_install_vs2015community => this chocolatey recipe do not install all VC Tools by default
[ ] stella-env file : make it local or global with an option ?
[ ] "no_proxy" should be in stella-env file
[ ] proxy values in stella-env should be local or global
[X] win : link-app : add option to align workspace/cache path (like on nix)



[ ] ssh : launch stella app through ssh
https://thornelabs.net/2013/08/21/simple-ways-to-send-multiple-line-commands-over-ssh.html
http://stackoverflow.com/questions/4412238/whats-the-cleanest-way-to-ssh-and-run-multiple-commands-in-bash
http://tldp.org/LDP/abs/html/here-docs.html
http://stackoverflow.com/questions/305035/how-to-use-ssh-to-run-shell-script-on-a-remote-machine
SSHFS ? cache delivering only via HTTP ?

[ ] win : harmonization of internal recipe (patch, unzip, wget, ...)

[ ] nix : code quality shellcheck, lint, bats
http://carlosbecker.com/posts/lint-shell-scripts
https://github.com/dokku/dokku/blob/master/tests.mk
https://github.com/progrium/bashstyle
http://stackoverflow.com/questions/3668665/is-there-a-static-analysis-tool-like-lint-or-perlcritic-for-shell-scripts
http://man.he.net/man1/checkbashisms ===> test portability
https://github.com/duggan/shlint ===> test portability
https://github.com/SublimeLinter/SublimeLinter-shellcheck

[ ] migrate to posix shell ? or dash ? https://wiki.ubuntu.com/DashAsBinSh

[ ] configuration step for each feature recipe
    nix : use augeas https://github.com/hercules-team/augeas ? -- see ryba ? (nodejs) -- use simple sed ?
    win : ?

[ ] turn stella/bin folder into module ?
    module/core
    module/feature
    module/app
    module/boot

[ ] unit test : app/test/nix app/text/win
    nix : bats
    win : ?

[ ] speed up grep http://applocator.blogspot.fr/2013/10/speed-up-bash-scripts-that-use-grep.html

[ ] nix : explore https://github.com/alebcay/awesome-shell

[ ] macos : download homebrew binary  https://homebrew.bintray.com/bottles/libzip-1.0.1.el_capitan.bottle.tar.gz

[ ] portable feature installation : embedded all dependencies,including system ?

[ ] distinguish PATH env for current stella app with PATH from stella in 2 variable, and give the possibility to retrieve them in a separate way

[ ] win/nix : remove FORCE global option, add it as option for each function

[ ] change proxyport, proxyhost, proxyuser, proxypassword in stella.sh command line as a unique arg --proxy=uri, and use __uri_parse

[ ] download cache folder : first lookup in APP CACHE FOLDER, then in STELLA CACHE FOLDER. Linux [X] Win [ ]

[ ] shadow features : rename temporary some folder to deactivate features ? (for example, different build tools, to select the right one) or use symlink in case of build tools

[ ] win : remove bin/ folder
